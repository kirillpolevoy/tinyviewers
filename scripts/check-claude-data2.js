import { createClient } from "@supabase/supabase-js"; import dotenv from "dotenv"; import path from "path"; import { fileURLToPath } from "url"; const __filename = fileURLToPath(import.meta.url); const __dirname = path.dirname(__filename); dotenv.config({ path: path.join(__dirname, "..", ".env.local") }); const supabase = createClient(process.env.NEXT_PUBLIC_SUPABASE_URL, process.env.SUPABASE_SERVICE_ROLE_KEY); console.log("ðŸŽ¬ MOVIES WITH CLAUDE ANALYSIS"); console.log("=============================="); const { data, error } = await supabase.from("movies").select("id, title, scenes(id)").not("scenes", "is", null); if (error) { console.error("Error:", error); process.exit(1); } console.log(`Found ${data.length} movies with Claude scenes:`); data.forEach((movie, i) => { const sceneCount = movie.scenes ? movie.scenes.length : 0; console.log(`[${i+1}] ${movie.title} - ${sceneCount} scenes`); }); console.log(""); console.log("ðŸ“Š DETAILED SCENE BREAKDOWN:"); for (const movie of data.slice(0, 5)) { console.log(`\nðŸŽ¬ ${movie.title}:`); const { data: scenes } = await supabase.from("scenes").select("id, intensity_2y, intensity_3y, intensity_4y, intensity_5y").eq("movie_id", movie.id).limit(3); if (scenes && scenes.length > 0) { scenes.forEach((scene, i) => { console.log(`   Scene ${i+1}: 2y=${scene.intensity_2y} 3y=${scene.intensity_3y} 4y=${scene.intensity_4y} 5y=${scene.intensity_5y}`); }); } }
